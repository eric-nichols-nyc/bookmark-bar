// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  externalId String   @unique
  email      String?   @unique
  name       String?
  password   String?
  attributes Json?
  urls       Url[]
  tags       Tag[]
  folders Folder[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Url {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  userId    String @db.ObjectId
  user      User @relation(fields: [userId], references: [id])
  url       String
  title     String
  description String
  imageUrl  String
  folderId  String @db.ObjectId
  folder    Folder @relation(fields: [folderId], references: [id])
  shortUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tag {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  userId    String @db.ObjectId
  user      User @relation(fields: [userId], references: [id])
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Folder {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  userId    String @db.ObjectId
  user      User @relation(fields: [userId], references: [id])
  name      String
  urls      Url[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}